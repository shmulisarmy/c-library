on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs: 
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [gcc, clang]

    name: Build and Test on ${{ matrix.os }} with ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up ${{ matrix.compiler }}
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            sudo apt-get update
            sudo apt-get install -y ${{ matrix.compiler }} 
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            # On macOS, clang is pre-installed, and gcc points to clang
            echo "No additional setup required for ${{ matrix.compiler }} on macOS."
          fi

      - name: Compile the code
        run: |
          if [ "${{ matrix.compiler }}" == "gcc" ]; then
            g++ -o test test.cpp -std=c++17
          elif [ "${{ matrix.compiler }}" == "clang" ]; then
            clang++ -o test test.cpp -std=c++17
          fi

      - name: Confirm compilation
        run: |
          if [ ! -f test ]; then
            echo "test executable not found"
            ls
            exit 1
          fi

      - name: Run tests
        run: ./test
